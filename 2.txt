function delay(n){
  return new Promise(resolve => {
    setTimeout(() =>{
      resolve();
    }, n*1000);
  });
}

delay(5).then(()=>{
  console.log("5 секунд");
});
console.log("Начало");




function delay(n){
  return new Promise(resolve => {
    setTimeout(() =>{
      resolve();
    }, n*1000);
  });
}

function countdown(n) {
  console.log(n);
  if (n > 0) {
    return delay(1).then(() => countdown(n - 1));
  }
}

countdown(5);





async function getFirstRepositoryName(username) {
    const userResponse = await fetch(`https://api.github.com/users/${username}`);
    const userData = await userResponse.json();

    const reposUrl = userData.repos_url;

    const reposResponse = await fetch(reposUrl);
    const reposData = await reposResponse.json();

    if (reposData.length > 0) {
        return reposData[0].name;
    } else {
        return "Репозитории не найдены";
    }
}


const username = "millerkris";
getFirstRepositoryName(username)
    .then((repositoryName) => {
        console.log(`Название первого репозитория: ${repositoryName}`);
    })
    .catch((error) => {
        console.error("Ошибка:", error);
    });
